{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": [
     "hide-cell"
    ]
   },
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "tags": [
     "hide-cell"
    ]
   },
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.environ[\"XLA_FLAGS\"] = \"--xla_force_host_platform_device_count=2\"\n",
    "import numpyro\n",
    "\n",
    "numpyro.enable_x64()\n",
    "import jax\n",
    "from jax._src.config import config\n",
    "\n",
    "config.update(\"jax_enable_x64\", True)\n",
    "import jax.numpy as jnp\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import dynamicAll\n",
    "from dynamicAll import models\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sampling\n",
    "\n",
    "In this tutorial we'll go over the basics of sampling using dynamicall.\n",
    "We do this very simply using rejection sampling, leveraging Jax's vectorization capabilities."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## tdr; \n",
    "\n",
    "If you just want to see the code, here it is:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "from astropy.stats import histogram\n",
    "\n",
    "model_params = {\"M\": 1e5, \"rs\": 0.25}\n",
    "model = models.Plummer(**model_params)\n",
    "samples = model.sample_w_conditional(N=10_000, save=False)\n",
    "\n",
    "r = np.sqrt(samples[:, 0] ** 2 + samples[:, 1] ** 2 + samples[:, 2] ** 2)\n",
    "v = np.sqrt(samples[:, 3] ** 2 + samples[:, 4] ** 2 + samples[:, 5] ** 2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.008671719755715854\n"
     ]
    }
   ],
   "source": [
    "print(np.min(r))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x32bec0790>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def g_q(q):\n",
    "    \"\"\"\n",
    "    Probability distribution for q = v/v_esc.\n",
    "\n",
    "    Parameters\n",
    "    ----------\n",
    "    q : _type_\n",
    "        _description_\n",
    "\n",
    "    Returns\n",
    "    -------\n",
    "    _type_\n",
    "        _description_\n",
    "    \"\"\"\n",
    "    return q**2 * (1 - q**2) ** (7 / 2) * (512 / (7 * np.pi))\n",
    "\n",
    "\n",
    "r_test = np.logspace(-2, 2, 100)\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots(ncols=2, figsize=(14, 5))\n",
    "r_test = np.logspace(-2, 2, 100)\n",
    "N, bin_edges = histogram(r, bins=\"blocks\")\n",
    "r_center = (bin_edges[1:] + bin_edges[:-1]) / 2\n",
    "q = v / model.v_esc(r)\n",
    "# sanity checks\n",
    "N, vel_edges = histogram(q, bins=\"blocks\")\n",
    "q_test = np.logspace(-2, 0, 100)\n",
    "\n",
    "\n",
    "ax[0].hist(r, bins=bin_edges, density=\"True\", label=\"sampling\")\n",
    "ax[0].plot(\n",
    "    r_test,\n",
    "    model.probability(r_test),\n",
    "    label=\"Analytical\",\n",
    "    lw=3,\n",
    ")\n",
    "ax[0].set(xscale=\"log\", xlabel=\"r pkpc\", ylabel=r\"$pdf(r)$\")\n",
    "\n",
    "\n",
    "ax[1].hist(q, bins=vel_edges, density=True)\n",
    "ax[1].plot(\n",
    "    q_test,\n",
    "    g_q(q_test),\n",
    "    lw=3,\n",
    ")\n",
    "ax[1].set(\n",
    "    xscale=\"log\", ylim=(0, 3), xlabel=r\"$q =\\frac{v}{v_{esc}}(r)$\", ylabel=r\"$pdf(q)$\"\n",
    ")\n",
    "ax[0].legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Rejection sampling\n",
    "\n",
    "The basic outline of how we sample in cases where there isn't a convenient trick to sample the distribution, i.e. cases where we have some stellar distribution embedded in a dark halo, we can calculate the distribution function using the Eddington formula.\n",
    "Then use rejection sampling in order to get samples."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "model.D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "E = jax.vmap(model.total_energy)(samples[:, :2], samples[:, 3:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Array(-0.33518726, dtype=float64), Array(-0.33518726, dtype=float64))"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "E[23], model.total_energy(samples[23, :2], samples[23, 3:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x32d9290d0>]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "N, bin_edges = histogram(E, bins=\"blocks\")\n",
    "bin_centers = (bin_edges[1:] + bin_edges[:-1]) / 2\n",
    "ax.hist(E, bins=bin_edges, density=True)\n",
    "ax.plot(\n",
    "    bin_centers, (-bin_centers) ** (7 / 2) * (1 - bin_centers / 0.5) ** (5 / 2), lw=3\n",
    ")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Following Binney and Tremaine, we can write down the Eddington formula for the distribution function of an isotropic system as\n",
    "$$\n",
    "f(\\epsilon) = \\frac{1}{\\sqrt{8}\\pi^2}\\frac{d}{d\\epsilon}\\int_{0}^{\\infty} \\frac{d\\psi}{\\sqrt{\\epsilon-\\psi}}\\frac{d\\rho}{d\\psi}.\n",
    "$$\n",
    "This is following the Normal conventions where\n",
    "$\\psi = -\\Phi + \\Phi_{0}$ and $\\epsilon = \\psi - \\frac{1}{2}v^{2}$.\n",
    "In cases where a system extends towards infinity, $\\Phi_{0} = 0$ and the relative energy $\\epsilon = $ binding energy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An equivalent formula is given by:\n",
    "$$\n",
    "f(\\epsilon) = \\frac{1}{\\sqrt{8}\\pi^2}\\int_{0}^{\\infty} \\frac{d\\psi}{\\sqrt{\\epsilon-\\psi}}\\frac{d^{2}\\rho}{d\\psi^{2}} + \\frac{1}{\\sqrt{\\epsilon}}\\left(\\frac{d\\rho}{d\\psi}\\right)_{\\psi=0}.\n",
    "$$\n",
    "\n",
    "For numerical calculations e.g. sampling, it might be easier to not have to calculate $\\rho(\\psi)$ as it may not be possible to write down in closed form.\n",
    "Fortunately, $\\rho(\\psi)$ only appears as a derivative in the above formula we can rewrite it as \n",
    "This mean we can use the fact that\n",
    "\n",
    "$$d\\psi = \\frac{d\\psi}{dr}dr$$\n",
    "$$\\frac{d}{d\\psi}= \\frac{dr}{d\\psi}\\frac{d}{dr} $$\n",
    "$$\\frac{d\\psi(r)}{dr} = -\\frac{GM(r)}{r^{2}}$$\n",
    "\n",
    "\n",
    "\n",
    "$$\n",
    "f(\\epsilon) = \\frac{1}{\\sqrt{8}\\pi^2}\\int_{r_\\epsilon}^{\\infty} \\frac{k(r)dr}{\\sqrt{\\epsilon - \\psi(r)}}\n",
    "$$\n",
    "where k(r)\n",
    "$$\n",
    "k(r) = \\frac{r^{2}}{GM(r)}\\left[\\rho''(r)\\ + \\rho'(r)\\left(\\frac{2}{r} - \\frac{4\\pi\\rho(r)}{M(r)}\\right)\\right]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "from dynamicAll import models\n",
    "\n",
    "# Define parameters\n",
    "dm = {\"rhos\": 6.4e7, \"rs\": 1.0, \"a\": 1.0, \"b\": 1.0, \"c\": 3.0}\n",
    "stellar = {\"M\": 1.0, \"rs\": 0.25}\n",
    "\n",
    "stellar_component = models.Plummer(**stellar)\n",
    "stellar_test = {\n",
    "    \"rhos\": 3 / 4 / jnp.pi / 0.25**3,\n",
    "    \"rs\": 0.25,\n",
    "    \"a\": 0.1,\n",
    "    \"b\": 2.0,\n",
    "    \"c\": 5.0,\n",
    "}\n",
    "stellar_component = models.HernquistZhao(**stellar_test)\n",
    "dm_component = models.HernquistZhao(**dm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array(25.5484133, dtype=float64)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r200 = dm_component.r200()\n",
    "r200"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(Array(21.06988753, dtype=float64), Array(58.81328836, dtype=float64))"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(jnp.sqrt(-dm_component.potential(r200))), jnp.sqrt(-dm_component.potential(1e-8))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array(3.24057521, dtype=float64)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jnp.log(r200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array([1.00000000e-02, 2.78255940e-02, 7.74263683e-02, 2.15443469e-01,\n",
       "       5.99484250e-01, 1.66810054e+00, 4.64158883e+00, 1.29154967e+01,\n",
       "       3.59381366e+01, 1.00000000e+02], dtype=float64)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jnp.logspace(-2, 2, 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "import jax\n",
    "import jax.numpy as jnp\n",
    "\n",
    "# r = jnp.logspace(-8, jnp.log10(r200), 10_000)\n",
    "r = jnp.logspace(-8, jnp.log10(24815690.058933303), 10_000)\n",
    "rho = stellar_component.density(r)\n",
    "phi = -jax.vmap(dm_component.potential)(r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from jax_cosmo.scipy.interpolate import InterpolatedUnivariateSpline\n",
    "import astropy.units as u\n",
    "\n",
    "rho_of_phi = InterpolatedUnivariateSpline(phi, rho, k=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2500x500 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.style.use(\"/Users/juan/phd/matplotlib/jdefault.mplstyle\")\n",
    "fig, ax = plt.subplots(1, 4, figsize=(25, 5))\n",
    "ax[0].plot(r, rho)\n",
    "ax[0].set(\n",
    "    xscale=\"log\", yscale=\"log\", xlabel=\"r\", ylabel=r\"$\\rho~[\\rm M_{\\odot}~kpc^{-3}]$\"\n",
    ")\n",
    "# ax[1].plot(r,(phi*u.kpc**2/u.s**2).to(u.km**2/u.s**2))\n",
    "ax[1].plot(r, phi)\n",
    "# ax[1].plot(r,dm_test.potential(r),linestyle='--')\n",
    "ax[1].set(\n",
    "    xscale=\"log\",\n",
    "    # yscale = 'log',\n",
    "    xlabel=\"r\",\n",
    "    ylabel=r\"$|\\Phi|~[\\rm km^{2}~s^{-2}]$\",\n",
    ")\n",
    "# ax[2].plot((phi*u.kpc**2/u.s**2).to(u.km**2/u.s**2),rho)\n",
    "ax[2].plot(phi, rho)\n",
    "# ax[2].plot((phi*u.kpc**2/u.s**2).to(u.km**2/u.s**2),rho_of_phi(phi),linestyle='--')\n",
    "ax[2].set(\n",
    "    # xscale = 'log',\n",
    "    yscale=\"log\",\n",
    "    xlabel=\"$\\Phi$\",\n",
    "    ylabel=r\"$\\rho(\\Phi)$\",\n",
    ")\n",
    "\n",
    "# ax[3].plot((phi*u.kpc**2/u.s**2).to(u.km**2/u.s**2),jax.vmap(jax.grad(rho_of_phi))((phi*u.kpc**2/u.s**2).to(u.km**2/u.s**2)),linestyle='--')\n",
    "ax[3].plot(phi, jax.vmap(jax.grad(rho_of_phi))(phi))\n",
    "ax[3].set(\n",
    "    # xscale=\"log\",\n",
    "    yscale=\"log\",\n",
    "    xlabel=\"$\\Phi$\",\n",
    "    ylabel=r\"$\\frac{d\\rho}{d\\Phi}$\",\n",
    ");\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "x, w = np.polynomial.legendre.leggauss(512)  # TODO: Find a better way to set this.\n",
    "\n",
    "x = jnp.array(x)\n",
    "w = jnp.array(w)\n",
    "drho_dphi = jax.vmap(jax.grad(rho_of_phi))\n",
    "\n",
    "\n",
    "def DistributionFunction(E):\n",
    "    def integral(E):\n",
    "        x0 = 0.0\n",
    "        x1 = E\n",
    "        xi = 0.5 * (x1 - x0) * x + 0.5 * (x1 + x0)\n",
    "        wi = 0.5 * (x1 - x0) * w\n",
    "        return jnp.sum(wi * drho_dphi(xi) / jnp.sqrt(E - xi))\n",
    "\n",
    "    out = jax.grad(integral)(E)\n",
    "    coeff = jnp.pi ** (-2) / jnp.sqrt(8)\n",
    "    return jnp.nan_to_num(coeff * out)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4.300917270036279e-06 km2 kpc / (solMass s2)\n",
      "[1.02329299e+00 1.02746708e+00 1.03165820e+00 ... 3.47162021e+03\n",
      " 3.48578122e+03 3.50000000e+03]\n"
     ]
    }
   ],
   "source": [
    "import astropy.constants as const\n",
    "\n",
    "print(const.G.to(u.kpc * u.km**2 / u.s**2 / u.Msun))\n",
    "E = jnp.logspace(1e-2, jnp.log10(3500), 2_000)\n",
    "\n",
    "print(E)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "DF = jax.vmap(DistributionFunction)(E)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3459.0029054063216"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "epsilon_max = 4 * jnp.pi * dm_component.G * dm_component._rhos * dm_component._rs**2\n",
    "epsilon_max"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(3400.0, 3500.0),\n",
       " None,\n",
       " None,\n",
       " Text(0.5, 0, '$\\\\epsilon$'),\n",
       " Text(0, 0.5, '$f(\\\\epsilon)$')]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(E, DF)\n",
    "ax.axvline(epsilon_max, color=\"black\", linestyle=\"--\")\n",
    "ax.set(\n",
    "    xlim=(3400, 3500),\n",
    "    yscale=\"log\",\n",
    "    xscale=\"linear\",\n",
    "    xlabel=r\"$\\epsilon$\",\n",
    "    ylabel=r\"$f(\\epsilon)$\",\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "xi, wi = dm_component._x256, dm_component._w256\n",
    "r_lim = 50\n",
    "# r_e = 2.53265053e01\n",
    "r_e = 8.88188420e-06\n",
    "# x0 = jnp.arcsin(r_e / r_lim)\n",
    "x0 = 0\n",
    "x1 = jnp.pi / 2\n",
    "\n",
    "xk = 0.5 * (x1 - x0) * xi + 0.5 * (x1 + x0)\n",
    "wk = 0.5 * (x1 - x0) * wi\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array([2.57301040e-01, 4.88278763e-02, 1.98637435e-02, 1.06953719e-02,\n",
       "       6.66794735e-03, 4.54973382e-03, 3.30029658e-03, 2.50220404e-03,\n",
       "       1.96162711e-03, 1.57862080e-03, 1.29740834e-03, 1.08487296e-03,\n",
       "       9.20346039e-04, 7.90387104e-04, 6.85949830e-04, 6.00764484e-04,\n",
       "       5.30374697e-04, 4.71542677e-04, 4.21870173e-04, 3.79550186e-04,\n",
       "       3.43200305e-04, 3.11748380e-04, 2.84352570e-04, 2.60344426e-04,\n",
       "       2.39187738e-04, 2.20448343e-04, 2.03771672e-04, 1.88865867e-04,\n",
       "       1.75488923e-04, 1.63438811e-04, 1.52545806e-04, 1.42666481e-04,\n",
       "       1.33678966e-04, 1.25479173e-04, 1.17977772e-04, 1.11097747e-04,\n",
       "       1.04772417e-04, 9.89438116e-05, 9.35613448e-05, 8.85807107e-05,\n",
       "       8.39629721e-05, 7.96737984e-05, 7.56828263e-05, 7.19631223e-05,\n",
       "       6.84907282e-05, 6.52442750e-05, 6.22046543e-05, 5.93547372e-05,\n",
       "       5.66791335e-05, 5.41639837e-05, 5.17967802e-05, 4.95662120e-05,\n",
       "       4.74620298e-05, 4.54749288e-05, 4.35964460e-05, 4.18188703e-05,\n",
       "       4.01351642e-05, 3.85388939e-05, 3.70241684e-05, 3.55855855e-05,\n",
       "       3.42181839e-05, 3.29174008e-05, 3.16790336e-05, 3.04992072e-05,\n",
       "       2.93743429e-05, 2.83011322e-05, 2.72765127e-05, 2.62976460e-05,\n",
       "       2.53618987e-05, 2.44668247e-05, 2.36101496e-05, 2.27897564e-05,\n",
       "       2.20036724e-05, 2.12500578e-05, 2.05271950e-05, 1.98334789e-05,\n",
       "       1.91674085e-05, 1.85275784e-05, 1.79126720e-05, 1.73214546e-05,\n",
       "       1.67527676e-05, 1.62055227e-05, 1.56786969e-05, 1.51713280e-05,\n",
       "       1.46825103e-05, 1.42113903e-05, 1.37571636e-05, 1.33190713e-05,\n",
       "       1.28963970e-05, 1.24884641e-05, 1.20946328e-05, 1.17142982e-05,\n",
       "       1.13468877e-05, 1.09918591e-05, 1.06486987e-05, 1.03169194e-05,\n",
       "       9.99605911e-06, 9.68567934e-06, 9.38536361e-06, 9.09471623e-06,\n",
       "       8.81336103e-06, 8.54094022e-06, 8.27711333e-06, 8.02155620e-06,\n",
       "       7.77396007e-06, 7.53403070e-06, 7.30148752e-06, 7.07606294e-06,\n",
       "       6.85750160e-06, 6.64555968e-06, 6.44000433e-06, 6.24061303e-06,\n",
       "       6.04717309e-06, 5.85948108e-06, 5.67734240e-06, 5.50057078e-06,\n",
       "       5.32898788e-06, 5.16242288e-06, 5.00071207e-06, 4.84369856e-06,\n",
       "       4.69123185e-06, 4.54316761e-06, 4.39936731e-06, 4.25969795e-06,\n",
       "       4.12403183e-06, 3.99224623e-06, 3.86422325e-06, 3.73984952e-06,\n",
       "       3.61901602e-06, 3.50161786e-06, 3.38755408e-06, 3.27672753e-06,\n",
       "       3.16904461e-06, 3.06441515e-06, 2.96275228e-06, 2.86397223e-06,\n",
       "       2.76799423e-06, 2.67474034e-06, 2.58413538e-06, 2.49610676e-06,\n",
       "       2.41058438e-06, 2.32750051e-06, 2.24678974e-06, 2.16838880e-06,\n",
       "       2.09223653e-06, 2.01827378e-06, 1.94644327e-06, 1.87668960e-06,\n",
       "       1.80895910e-06, 1.74319977e-06, 1.67936126e-06, 1.61739471e-06,\n",
       "       1.55725279e-06, 1.49888954e-06, 1.44226038e-06, 1.38732204e-06,\n",
       "       1.33403249e-06, 1.28235088e-06, 1.23223753e-06, 1.18365385e-06,\n",
       "       1.13656230e-06, 1.09092636e-06, 1.04671048e-06, 1.00388003e-06,\n",
       "       9.62401302e-07, 9.22241409e-07, 8.83368308e-07, 8.45750742e-07,\n",
       "       8.09358210e-07, 7.74160937e-07, 7.40129851e-07, 7.07236546e-07,\n",
       "       6.75453261e-07, 6.44752855e-07, 6.15108779e-07, 5.86495055e-07,\n",
       "       5.58886256e-07, 5.32257478e-07, 5.06584327e-07, 4.81842897e-07,\n",
       "       4.58009750e-07, 4.35061898e-07, 4.12976793e-07, 3.91732300e-07,\n",
       "       3.71306693e-07, 3.51678633e-07, 3.32827157e-07, 3.14731668e-07,\n",
       "       2.97371916e-07, 2.80727994e-07, 2.64780324e-07, 2.49509644e-07,\n",
       "       2.34897005e-07, 2.20923756e-07, 2.07571540e-07, 1.94822284e-07,\n",
       "       1.82658194e-07, 1.71061746e-07, 1.60015682e-07, 1.49503004e-07,\n",
       "       1.39506970e-07, 1.30011087e-07, 1.20999112e-07, 1.12455044e-07,\n",
       "       1.04363123e-07, 9.67078280e-08, 8.94738740e-08, 8.26462118e-08,\n",
       "       7.62100260e-08, 7.01507345e-08, 6.44539885e-08, 5.91056720e-08,\n",
       "       5.40919030e-08, 4.93990339e-08, 4.50136526e-08, 4.09225844e-08,\n",
       "       3.71128934e-08, 3.35718846e-08, 3.02871065e-08, 2.72463537e-08,\n",
       "       2.44376696e-08, 2.18493494e-08, 1.94699438e-08, 1.72882623e-08,\n",
       "       1.52933766e-08, 1.34746249e-08, 1.18216155e-08, 1.03242313e-08,\n",
       "       8.97263348e-09, 7.75726613e-09, 6.66886054e-09, 5.69843958e-09,\n",
       "       4.83732211e-09, 4.07712745e-09, 3.40977979e-09, 2.82751266e-09,\n",
       "       2.32287323e-09, 1.88872668e-09, 1.51826040e-09, 1.20498818e-09,\n",
       "       9.42754219e-10, 7.25737035e-10, 5.48453262e-10, 4.05761259e-10,\n",
       "       2.92864565e-10, 2.05315166e-10, 1.39016576e-10, 9.02267050e-11,\n",
       "       5.55605135e-11, 3.19924348e-11, 1.68585646e-11, 7.85860323e-12,\n",
       "       3.05754427e-12, 8.87104733e-13, 1.46889814e-13, 5.29141990e-15],      dtype=float64)"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r_e / jnp.sin(xk) - r_e"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array(4.47562343e-09, dtype=float64)"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "3458.98754427 + dm_component.potential(r_e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Array([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
       "       nan, nan, nan, nan, nan, nan, nan, nan, nan], dtype=float64)"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1 / jnp.sqrt(\n",
    "    (-dm_component.potential(r_e) + jax.vmap(dm_component.potential)(r_e * jnp.sin(xk)))\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def Distribution_Function(E):\n",
    "    mass = jax.vmap(dm_component.mass)\n",
    "    rho = stellar_component.density\n",
    "    rho_p = jax.grad(rho)\n",
    "    rho_pp = jax.grad(rho_p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class method time: 4.289446 seconds\n",
      "Static function time: 4.173881 seconds\n",
      "Overhead: 2.77%\n",
      "\n",
      "Testing with varying input:\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "<lambda>() takes 0 positional arguments but 1 was given",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[117], line 58\u001b[0m\n\u001b[1;32m     54\u001b[0m \u001b[38;5;129m@jax\u001b[39m\u001b[38;5;241m.\u001b[39mjit\n\u001b[1;32m     55\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mvarying_input_compute\u001b[39m(x):\n\u001b[1;32m     56\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m SubModel()\u001b[38;5;241m.\u001b[39mcompute(x)\n\u001b[0;32m---> 58\u001b[0m varying_input_time \u001b[38;5;241m=\u001b[39m \u001b[43mbenchmark\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43;01mlambda\u001b[39;49;00m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mvarying_input_compute\u001b[49m\u001b[43m(\u001b[49m\u001b[43mjax\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrandom\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43muniform\u001b[49m\u001b[43m(\u001b[49m\u001b[43mjax\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mrandom\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mPRNGKey\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m0\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m     59\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mVarying input time: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mvarying_input_time\u001b[38;5;132;01m:\u001b[39;00m\u001b[38;5;124m.6f\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m seconds\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "Cell \u001b[0;32mIn[117], line 31\u001b[0m, in \u001b[0;36mbenchmark\u001b[0;34m(func, x, iterations)\u001b[0m\n\u001b[1;32m     29\u001b[0m start_time \u001b[38;5;241m=\u001b[39m time\u001b[38;5;241m.\u001b[39mtime()\n\u001b[1;32m     30\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m _ \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(iterations):\n\u001b[0;32m---> 31\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     32\u001b[0m jax\u001b[38;5;241m.\u001b[39mblock_until_ready(result)\n\u001b[1;32m     33\u001b[0m end_time \u001b[38;5;241m=\u001b[39m time\u001b[38;5;241m.\u001b[39mtime()\n",
      "\u001b[0;31mTypeError\u001b[0m: <lambda>() takes 0 positional arguments but 1 was given"
     ]
    }
   ],
   "source": [
    "import jax\n",
    "import jax.numpy as jnp\n",
    "from functools import partial\n",
    "import time\n",
    "\n",
    "\n",
    "# Define our models\n",
    "class BaseModel:\n",
    "    @classmethod\n",
    "    @partial(jax.jit, static_argnums=(0,))\n",
    "    def compute(cls, x):\n",
    "        return cls.transform(x) * 2\n",
    "\n",
    "    @classmethod\n",
    "    def transform(cls, x):\n",
    "        return x + 1\n",
    "\n",
    "\n",
    "class SubModel(BaseModel):\n",
    "    @classmethod\n",
    "    def transform(cls, x):\n",
    "        return x * 3\n",
    "\n",
    "\n",
    "# Define a static function for comparison\n",
    "@jax.jit\n",
    "def static_compute(x):\n",
    "    return (x * 3) * 2  # Equivalent to SubModel's computation\n",
    "\n",
    "\n",
    "# Benchmark function\n",
    "def benchmark(func, x, iterations=1000000):\n",
    "    start_time = time.time()\n",
    "    for _ in range(iterations):\n",
    "        result = func(x)\n",
    "    jax.block_until_ready(result)\n",
    "    end_time = time.time()\n",
    "    return end_time - start_time\n",
    "\n",
    "\n",
    "# Prepare input\n",
    "x = jnp.array(5.0)\n",
    "\n",
    "# Warm-up JIT compilations\n",
    "SubModel().compute(x)\n",
    "static_compute(x)\n",
    "\n",
    "# Run benchmarks\n",
    "class_method_time = benchmark(SubModel().compute, x)\n",
    "static_func_time = benchmark(static_compute, x)\n",
    "\n",
    "print(f\"Class method time: {class_method_time:.6f} seconds\")\n",
    "print(f\"Static function time: {static_func_time:.6f} seconds\")\n",
    "print(\n",
    "    f\"Overhead: {(class_method_time - static_func_time) / static_func_time * 100:.2f}%\"\n",
    ")\n",
    "\n",
    "# Additional test: varying input\n",
    "print(\"\\nTesting with varying input:\")\n",
    "\n",
    "\n",
    "@jax.jit\n",
    "def varying_input_compute(x):\n",
    "    return SubModel().compute(x)\n",
    "\n",
    "\n",
    "varying_input_time = benchmark(\n",
    "    lambda: varying_input_compute(jax.random.uniform(jax.random.PRNGKey(0), (1,))), None\n",
    ")\n",
    "print(f\"Varying input time: {varying_input_time:.6f} seconds\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "py11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
